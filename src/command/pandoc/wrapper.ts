// generated by quarto generate-pandoc-wrapper

import { Command, Option } from "npm:clipanion";
import { isArray, isBoolean, isNumber } from "npm:typanion";
import { formatArrayOption, formatBooleanOption, formatStringOption } from "./formatters.ts";

export abstract class PandocWrapperCommand extends Command {
  ['from'] = Option.String('-f,-r,--from,--read', { hidden: true });
  ['to'] = Option.String('-t,-w,--to,--write', { hidden: true });
  ['output'] = Option.String('-o,--output', { hidden: true });
  ['data-dir'] = Option.String('--data-dir', { hidden: true });
  ['defaults'] = Option.String('-d,--defaults', { hidden: true });
  ['file-scope'] = Option.String('--file-scope', { hidden: true, tolerateBoolean: true, validator: isBoolean() });
  ['sandbox'] = Option.String('--sandbox', { hidden: true, tolerateBoolean: true, validator: isBoolean() });
  ['standalone'] = Option.String('--standalone', { hidden: true, tolerateBoolean: true, validator: isBoolean() });
  ['template'] = Option.String('--template', { hidden: true });
  ['variable'] = Option.String('-V,--variable', { hidden: true });
  ['wrap'] = Option.String('--wrap', { hidden: true });
  ['ascii'] = Option.String('--ascii', { hidden: true, tolerateBoolean: true, validator: isBoolean() });
  ['toc'] = Option.String('--toc,--table-of-contents', { hidden: true, tolerateBoolean: true, validator: isBoolean() });
  ['toc-depth'] = Option.String('--toc-depth', { hidden: true, validator: isNumber() });
  ['number-sections'] = Option.String('--number-sections', { hidden: true, tolerateBoolean: true, validator: isBoolean() });
  ['number-offset'] = Option.Array('--number-offset', { hidden: true, validator: isArray(isNumber()) });
  ['top-level-division'] = Option.String('--top-level-division', { hidden: true });
  ['extract-media'] = Option.String('--extract-media', { hidden: true });
  ['resource-path'] = Option.String('--resource-path', { hidden: true });
  ['include-in-header'] = Option.String('-H,--include-in-header', { hidden: true });
  ['include-before-body'] = Option.String('-B,--include-before-body', { hidden: true });
  ['include-after-body'] = Option.String('-A,--include-after-body', { hidden: true });
  ['no-highlight'] = Option.Boolean('--no-highlight', { hidden: true });
  ['highlight-style'] = Option.String('--highlight-style', { hidden: true });
  ['syntax-definition'] = Option.String('--syntax-definition', { hidden: true });
  ['dpi'] = Option.String('--dpi', { hidden: true, validator: isNumber() });
  ['eol'] = Option.String('--eol', { hidden: true });
  ['columns'] = Option.String('--columns', { hidden: true, validator: isNumber() });
  ['preserve-tabs'] = Option.String('--preserve-tabs', { hidden: true, tolerateBoolean: true, validator: isBoolean() });
  ['tab-stop'] = Option.String('--tab-stop', { hidden: true, validator: isNumber() });
  ['pdf-engine'] = Option.String('--pdf-engine', { hidden: true });
  ['pdf-engine-opt'] = Option.Array('--pdf-engine-opt', { hidden: true });
  ['reference-doc'] = Option.String('--reference-doc', { hidden: true });
  ['self-contained'] = Option.String('--self-contained', { hidden: true, tolerateBoolean: true, validator: isBoolean() });
  ['embed-resources'] = Option.String('--embed-resources', { hidden: true, tolerateBoolean: true, validator: isBoolean() });
  ['link-images'] = Option.String('--link-images', { hidden: true, tolerateBoolean: true, validator: isBoolean() });
  ['request-header'] = Option.String('--request-header', { hidden: true });
  ['no-check-certificate'] = Option.String('--no-check-certificate', { hidden: true, tolerateBoolean: true, validator: isBoolean() });
  ['abbreviations'] = Option.String('--abbreviations', { hidden: true });
  ['indented-code-classes'] = Option.String('--indented-code-classes', { hidden: true });
  ['default-image-extension'] = Option.String('--default-image-extension', { hidden: true });
  ['filter'] = Option.String('-F,--filter', { hidden: true });
  ['lua-filter'] = Option.String('-L,--lua-filter', { hidden: true });
  ['shift-heading-level-by'] = Option.String('--shift-heading-level-by', { hidden: true, validator: isNumber() });
  ['base-header-level'] = Option.String('--base-header-level', { hidden: true, validator: isNumber() });
  ['track-changes'] = Option.String('--track-changes', { hidden: true });
  ['strip-comments'] = Option.String('--strip-comments', { hidden: true, tolerateBoolean: true, validator: isBoolean() });
  ['reference-links'] = Option.String('--reference-links', { hidden: true, tolerateBoolean: true, validator: isBoolean() });
  ['reference-location'] = Option.String('--reference-location', { hidden: true });
  ['figure-caption-position'] = Option.String('--figure-caption-position', { hidden: true });
  ['table-caption-position'] = Option.String('--table-caption-position', { hidden: true });
  ['markdown-headings'] = Option.String('--markdown-headings', { hidden: true });
  ['list-tables'] = Option.String('--list-tables', { hidden: true, tolerateBoolean: true, validator: isBoolean() });
  ['listings'] = Option.String('--listings', { hidden: true, tolerateBoolean: true, validator: isBoolean() });
  ['incremental'] = Option.String('--incremental', { hidden: true, tolerateBoolean: true, validator: isBoolean() });
  ['slide-level'] = Option.String('--slide-level', { hidden: true, validator: isNumber() });
  ['section-divs'] = Option.String('--section-divs', { hidden: true, tolerateBoolean: true, validator: isBoolean() });
  ['html-q-tags'] = Option.String('--html-q-tags', { hidden: true, tolerateBoolean: true, validator: isBoolean() });
  ['email-obfuscation'] = Option.String('--email-obfuscation', { hidden: true });
  ['id-prefix'] = Option.String('--id-prefix', { hidden: true });
  ['title-prefix'] = Option.String('-T,--title-prefix', { hidden: true });
  ['css'] = Option.String('-c,--css', { hidden: true });
  ['epub-subdirectory'] = Option.String('--epub-subdirectory', { hidden: true });
  ['epub-cover-image'] = Option.String('--epub-cover-image', { hidden: true });
  ['epub-title-page'] = Option.String('--epub-title-page', { hidden: true, tolerateBoolean: true, validator: isBoolean() });
  ['epub-metadata'] = Option.String('--epub-metadata', { hidden: true });
  ['epub-embed-font'] = Option.String('--epub-embed-font', { hidden: true });
  ['split-level'] = Option.String('--split-level', { hidden: true, validator: isNumber() });
  ['chunk-template'] = Option.String('--chunk-template', { hidden: true });
  ['epub-chapter-level'] = Option.String('--epub-chapter-level', { hidden: true, validator: isNumber() });
  ['ipynb-output'] = Option.String('--ipynb-output', { hidden: true });
  ['citeproc'] = Option.Boolean('-C,--citeproc', { hidden: true });
  ['bibliography'] = Option.String('--bibliography', { hidden: true });
  ['csl'] = Option.String('--csl', { hidden: true });
  ['citation-abbreviations'] = Option.String('--citation-abbreviations', { hidden: true });
  ['natbib'] = Option.Boolean('--natbib', { hidden: true });
  ['biblatex'] = Option.Boolean('--biblatex', { hidden: true });
  ['mathml'] = Option.Boolean('--mathml', { hidden: true });
  ['webtex'] = Option.String('--webtex', { hidden: true, tolerateBoolean: true });
  ['mathjax'] = Option.String('--mathjax', { hidden: true, tolerateBoolean: true });
  ['katex'] = Option.String('--katex', { hidden: true, tolerateBoolean: true });
  ['gladtex'] = Option.Boolean('--gladtex', { hidden: true });
  ['trace'] = Option.String('--trace', { hidden: true, tolerateBoolean: true, validator: isBoolean() });
  ['dump-args'] = Option.String('--dump-args', { hidden: true, tolerateBoolean: true, validator: isBoolean() });
  ['ignore-args'] = Option.String('--ignore-args', { hidden: true, tolerateBoolean: true, validator: isBoolean() });
  ['verbose'] = Option.Boolean('--verbose', { hidden: true });
  ['fail-if-warnings'] = Option.String('--fail-if-warnings', { hidden: true, tolerateBoolean: true, validator: isBoolean() });
  ['bash-completion'] = Option.Boolean('--bash-completion', { hidden: true });
  ['list-input-formats'] = Option.Boolean('--list-input-formats', { hidden: true });
  ['list-output-formats'] = Option.Boolean('--list-output-formats', { hidden: true });
  ['list-extensions'] = Option.String('--list-extensions', { hidden: true, tolerateBoolean: true });
  ['list-highlight-languages'] = Option.Boolean('--list-highlight-languages', { hidden: true });
  ['list-highlight-styles'] = Option.Boolean('--list-highlight-styles', { hidden: true });
  ['print-default-template'] = Option.String('-D,--print-default-template', { hidden: true });
  ['print-default-data-file'] = Option.String('--print-default-data-file', { hidden: true });
  ['print-highlight-style'] = Option.String('--print-highlight-style', { hidden: true });
  
  get formattedPandocArgs(): string[] {
    return [
      formatStringOption('--from', this['from']),
      formatStringOption('--to', this['to']),
      formatStringOption('--output', this['output']),
      formatStringOption('--data-dir', this['data-dir']),
      formatStringOption('--defaults', this['defaults']),
      formatStringOption('--file-scope', this['file-scope']),
      formatStringOption('--sandbox', this['sandbox']),
      formatStringOption('--standalone', this['standalone']),
      formatStringOption('--template', this['template']),
      formatStringOption('--variable', this['variable']),
      formatStringOption('--wrap', this['wrap']),
      formatStringOption('--ascii', this['ascii']),
      formatStringOption('--toc', this['toc']),
      formatStringOption('--toc-depth', this['toc-depth']),
      formatStringOption('--number-sections', this['number-sections']),
      formatArrayOption('--number-offset', this['number-offset']),
      formatStringOption('--top-level-division', this['top-level-division']),
      formatStringOption('--extract-media', this['extract-media']),
      formatStringOption('--resource-path', this['resource-path']),
      formatStringOption('--include-in-header', this['include-in-header']),
      formatStringOption('--include-before-body', this['include-before-body']),
      formatStringOption('--include-after-body', this['include-after-body']),
      formatBooleanOption('--no-highlight', this['no-highlight']),
      formatStringOption('--highlight-style', this['highlight-style']),
      formatStringOption('--syntax-definition', this['syntax-definition']),
      formatStringOption('--dpi', this['dpi']),
      formatStringOption('--eol', this['eol']),
      formatStringOption('--columns', this['columns']),
      formatStringOption('--preserve-tabs', this['preserve-tabs']),
      formatStringOption('--tab-stop', this['tab-stop']),
      formatStringOption('--pdf-engine', this['pdf-engine']),
      formatArrayOption('--pdf-engine-opt', this['pdf-engine-opt']),
      formatStringOption('--reference-doc', this['reference-doc']),
      formatStringOption('--self-contained', this['self-contained']),
      formatStringOption('--embed-resources', this['embed-resources']),
      formatStringOption('--link-images', this['link-images']),
      formatStringOption('--request-header', this['request-header']),
      formatStringOption('--no-check-certificate', this['no-check-certificate']),
      formatStringOption('--abbreviations', this['abbreviations']),
      formatStringOption('--indented-code-classes', this['indented-code-classes']),
      formatStringOption('--default-image-extension', this['default-image-extension']),
      formatStringOption('--filter', this['filter']),
      formatStringOption('--lua-filter', this['lua-filter']),
      formatStringOption('--shift-heading-level-by', this['shift-heading-level-by']),
      formatStringOption('--base-header-level', this['base-header-level']),
      formatStringOption('--track-changes', this['track-changes']),
      formatStringOption('--strip-comments', this['strip-comments']),
      formatStringOption('--reference-links', this['reference-links']),
      formatStringOption('--reference-location', this['reference-location']),
      formatStringOption('--figure-caption-position', this['figure-caption-position']),
      formatStringOption('--table-caption-position', this['table-caption-position']),
      formatStringOption('--markdown-headings', this['markdown-headings']),
      formatStringOption('--list-tables', this['list-tables']),
      formatStringOption('--listings', this['listings']),
      formatStringOption('--incremental', this['incremental']),
      formatStringOption('--slide-level', this['slide-level']),
      formatStringOption('--section-divs', this['section-divs']),
      formatStringOption('--html-q-tags', this['html-q-tags']),
      formatStringOption('--email-obfuscation', this['email-obfuscation']),
      formatStringOption('--id-prefix', this['id-prefix']),
      formatStringOption('--title-prefix', this['title-prefix']),
      formatStringOption('--css', this['css']),
      formatStringOption('--epub-subdirectory', this['epub-subdirectory']),
      formatStringOption('--epub-cover-image', this['epub-cover-image']),
      formatStringOption('--epub-title-page', this['epub-title-page']),
      formatStringOption('--epub-metadata', this['epub-metadata']),
      formatStringOption('--epub-embed-font', this['epub-embed-font']),
      formatStringOption('--split-level', this['split-level']),
      formatStringOption('--chunk-template', this['chunk-template']),
      formatStringOption('--epub-chapter-level', this['epub-chapter-level']),
      formatStringOption('--ipynb-output', this['ipynb-output']),
      formatBooleanOption('--citeproc', this['citeproc']),
      formatStringOption('--bibliography', this['bibliography']),
      formatStringOption('--csl', this['csl']),
      formatStringOption('--citation-abbreviations', this['citation-abbreviations']),
      formatBooleanOption('--natbib', this['natbib']),
      formatBooleanOption('--biblatex', this['biblatex']),
      formatBooleanOption('--mathml', this['mathml']),
      formatStringOption('--webtex', this['webtex']),
      formatStringOption('--mathjax', this['mathjax']),
      formatStringOption('--katex', this['katex']),
      formatBooleanOption('--gladtex', this['gladtex']),
      formatStringOption('--trace', this['trace']),
      formatStringOption('--dump-args', this['dump-args']),
      formatStringOption('--ignore-args', this['ignore-args']),
      formatBooleanOption('--verbose', this['verbose']),
      formatStringOption('--fail-if-warnings', this['fail-if-warnings']),
      formatBooleanOption('--bash-completion', this['bash-completion']),
      formatBooleanOption('--list-input-formats', this['list-input-formats']),
      formatBooleanOption('--list-output-formats', this['list-output-formats']),
      formatStringOption('--list-extensions', this['list-extensions']),
      formatBooleanOption('--list-highlight-languages', this['list-highlight-languages']),
      formatBooleanOption('--list-highlight-styles', this['list-highlight-styles']),
      formatStringOption('--print-default-template', this['print-default-template']),
      formatStringOption('--print-default-data-file', this['print-default-data-file']),
      formatStringOption('--print-highlight-style', this['print-highlight-style'])
    ].filter(Boolean) as string[];
  }
}
