- name: project
  description: Project configuration.
  schema:
    object:
      closed: true
      properties:
        title:
          hidden: true
          schema: string
        type:
          enum: [default, website, book, site]
          completions: [default, website, book]
          description: "Project type (`default`, `website`, or `book`)"
        render:
          arrayOf: path
          description: "Files to render (defaults to all files)"
        execute-dir:
          enum: [file, project]
          description:
            short: "Working directory for computations"
            long: |
              Control the working directory for computations. 

              - `file`: Use the directory of the file that is currently executing.
              - `project`: Use the root directory of the project.
        output-dir:
          path:
            description: "Output directory"
        lib-dir:
          path:
            description: "HTML library (JS/CSS/etc.) directory"
        resources:
          maybeArrayOf:
            schema: path
            description: "Additional file resources to be copied to output directory"
        preview:
          description: Options for `quarto preview`
          schema:
            ref: project-preview

- name: website
  description: Website configuration.
  schema:
    ref: base-website

- name: book
  description: Book configuration.
  schema:
    object:
      super:
        resolveRef: base-website
      closed: true
      properties:
        title:
          string:
            description: "Book title"
        subtitle:
          string:
            description: "Book subtitle"
        author:
          maybeArrayOf:
            anyOf: [string, object]
            description: "Author or authors of the book"
        date:
          string:
            description: "Book publication date"
        abstract:
          string:
            description: "Book abstract"
        description:
          string:
            description: "Description metadata for HTML version of book"
        chapters:
          schema:
            ref: chapter-list
          description: "Book part and chapter files"
          hidden: true
        appendices:
          schema:
            ref: chapter-list
          description: "Book appendix files"
          hidden: true
        references:
          path:
            description: "Book references file"
        output-file:
          path:
            description: "Base name for single-file output (e.g. PDF, ePub)"
        cover-image:
          path:
            description: "Cover image (used in HTML and ePub formats)"
        cover-image-alt:
          string:
            description: "Alternative text for cover image (used in HTML format)"
        sharing:
          maybeArrayOf:
            enum: [twitter, facebook, linkedin]
            description: |
              Sharing buttons to include on navbar or sidebar
              (one or more of `twitter`, `facebook`, `linkedin`)
        downloads:
          maybeArrayOf:
            enum: [pdf, epub, docx]
            description: |
              Download buttons for other formats to include on navbar or sidebar
              (one or more of `pdf`, `epub`, and `docx`)
        tools:
          arrayOf:
            schema:
              ref: navigation-item
            description: "Custom tools for navbar or sidebar"

- name: type
  hidden: true
  schema:
    enum: ["cd93424f-d5ba-4e95-91c6-1890eab59fc7"]
  errorMessage: "type key not supported at project type-level. Use `project: type: ...` instead."
  description: "internal-schema-hack"
  # this is a hack so that we "support" an empty schema.
  # The value in the enum should never appear in actual documents.
  #
  # In order to provide a good error message, we need an error
  # to be reported with instancePath ["type"].
  # This is a hacky way to do it.
  #
  # In general, full json schema would allow negative assertions,
  # but that makes our error localization heuristics worse. So we hack.
